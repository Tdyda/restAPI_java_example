services:
  mysql:
    image: mysql:latest
    container_name: restAPI_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

  mysql_test:
    image: mysql:latest
    container_name: restAPI_mysql_test
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: test_root
      MYSQL_DATABASE: test_db
      MYSQL_USER: test_user
      MYSQL_PASSWORD: test_pass
    ports:
      - "3308:3306"
    volumes:
      - mysql_test_data:/var/lib/mysql
    networks:
      - app-network

  app:
    build:
      context: ..
      dockerfile: docker/app/Dockerfile
    container_name: restAPI_app
    ports:
      - "5001:5001"
    environment:
      DATABASE_URL: jdbc:mysql://restAPI_mysql:3306/${MYSQL_DATABASE}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
    depends_on:
      - mysql
      - rabbitmq
    networks:
      - app-network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: restAPI_nginx
    ports:
      - "80:80"
    depends_on:
      - app
    networks:
      - app-network

volumes:
  mysql_data:
  mysql_test_data:

networks:
  app-network:
    driver: bridge